<?php

namespace TeleinfoHandler;

include_once 'TeleinfoHandlerObserverInterface.php';

//use TeleinfoHandlerObserverInterface as ObserverInterface;

/**
 * Teleinfo handler observer
 *
 * This class observers teleinfo handler events. TeleinfoHandlerObserverInterface
 * implementation is mandatory for teleinfo handler observing.
 * 
 * @author     Gaël Le Moëllic <gael.lm@gmail.com>
 * @version    Release: 1.0
 * @since      Class available since Release 1.0
 */
class TeleinfoHandlerObserver implements TeleinfoHandlerObserverInterface {
    
    /**
     * teleinfo event.
     *
     * @access private
     */
    private $_event;
    
    /**
     * teleinfo packet.
     *
     * @access protected
     */
    protected $_teleinfoPacket;
    
    /**
     * This method will be called on each teleinfo events, executed on a different
     * thread and is mandatory for TeleinfoHandlerObserverInterface implementation.
     * 
     * @access public
     */
    public function notify() {

        if ($this->_event === self::EVENT_RECEIVED) {
            $this->onReceivedEvent();
        }
    }
    
    /**
     * This method permit to set the teleinfo handler event cause and is mandatory for
     * TeleinfoHandlerObserverInterface implementation.
     * 
     * @param string $event event string generated by the teleinfo handler
     * 
     * @access public
     */
    public function setTeleinfoEvent($event) {
        $this->_event = $event;
    }

    /**
     * This method permit to set the teleinfo handler packet and is mandatory for
     * TeleinfoHandlerObserverInterface implementation.
     * 
     * @param TeleinfoPacket $teleinfoPacket packet received by the teleinfo handler
     * 
     * @access public
     */
    public function setTeleinfoPacket(TeleinfoPacket $teleinfoPacket) {
        $this->_teleinfoPacket = $teleinfoPacket;
    }

    /**
     * This method will be called when the observer is notify by a RECEIVED event.
     * Objects that extend this class have to override this method.
     *
     * @access protected
     */
    protected function onReceivedEvent() {
        
        //do somthing overriding me
    }
    
}
